{
  "version": "0.2.0",
  "configurations": [
    {},
    {
      "name": ".NET Core Attach",
      "type": "coreclr",
      "request": "attach"
    },
    {
      "name": "C#: <project-name> Debug",
      "type": "dotnet",
      "request": "launch",
      "projectPath": "${workspaceFolder}/<relative-path-to-project-folder><project-name>.csproj"
    },
    {
      "name": "C#: <project-name> Debug",
      "type": "dotnet",
      "request": "launch",
      "projectPath": "${workspaceFolder}/<relative-path-to-project-folder><project-name>.csproj"
    },
    {
      "name": "C#: <project-name> Debug",
      "type": "dotnet",
      "request": "launch",
      "projectPath": "${workspaceFolder}/<relative-path-to-project-folder><project-name>.csproj"
    },
    {
      "name": "C#: <project-name> Debug",
      "type": "dotnet",
      "request": "launch",
      "projectPath": "${workspaceFolder}/<relative-path-to-project-folder><project-name>.csproj"
    },
    {},
    {
      "name": "PowerShell: Binary Module Interactive",
      "type": "PowerShell",
      "request": "launch",
      "script": "Enter command to import your binary module, for example: \"Import-Module -Force /path/to/module.psd1|dll\"",
      "createTemporaryIntegratedConsole": true,
      "attachDotnetDebugger": true
    },
    {
      "name": "Cloud Run: Run/Debug Locally",
      "type": "cloudcode.cloudrun",
      "request": "launch",
      "build": {
        "docker": {
          "path": "Dockerfile"
        }
      },
      "image": "${workspaceFolderBasename}",
      "service": {
        "name": "${workspaceFolderBasename}",
        "containerPort": 8080,
        "resources": {
          "limits": {
            "memory": "256Mi"
          }
        }
      },
      "target": {
        "minikube": {}
      },
      "watch": true
    },
    {
      "name": "(Windows) Iniciar",
      "type": "cppvsdbg",
      "request": "launch",
      "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${fileDirname}",
      "environment": [],
      "console": "externalTerminal"
    }
    {
      "name": "C#: <project-name> Debug",
      "type": "dotnet",
      "request": "launch",
      "projectPath": "${workspaceFolder}/<relative-path-to-project-folder><project-name>.csproj"
    },

    {},

    {
      "name": "(gdb) Bash en Windows: iniciar",
      "type": "cppdbg",
      "request": "launch",
      "program": "Escriba el nombre del programa; por ejemplo, $      
    {
      "name": "(gdb) Bash en Windows: asociar",
      "type": "cppdbg",
      "request": "attach",
      "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
      "processId": "${command:pickRemoteProcess}",
      "pipeTransport": {
        "debuggerPath": "/usr/bin/gdb",
        "pipeProgram": "${env:windir}\\system32\\bash.exe",
        "pipeArgs": ["-c"],
        "pipeCwd": ""
      },
      "setupCommands": [
          {
              "description": "Habilitar la impresión con sangría para gdb",
              "text": "-enable-pretty-printing",
              "ignoreFailures": true
          },
          {
              "description": "Establecer tipo de desensamblado en Intel",
              "text": "-gdb-set disassembly-flavor intel",
              "ignoreFailures": true
          }
      ]
    }, 
    {
      "name": "(gdb) Bash en Windows: iniciar",
      "type": "cppdbg",
      "request": "launch",
      "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${fileDirname}",
      "environment": [],
      "externalConsole": false,
      "pipeTransport": {
        "debuggerPath": "/usr/bin/gdb",
        "pipeProgram": "${env:windir}\\system32\\bash.exe",
        "pipeArgs": ["-c"],
        "pipeCwd": ""
      },
      "setupCommands": [
          {
              "description": "Habilitar la impresión con sangría para gdb",
              "text": "-enable-pretty-printing",
              "ignoreFailures": true
          },
          {
              "description": "Establecer tipo de desensamblado en Intel",
              "text": "-gdb-set disassembly-flavor intel",
              "ignoreFailures": true
          }
      ]
    },
    {
      "name": "Depurador de Python: Archivo actual",
      "type": "debugpy",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal"
    },
    {
      "name": "Windows Player",
      "type": "unity",
      "request": "launch"
    },

    {
      "name": "Windows Player",
      "type": "unity",
      "request": "launch"
    },

    {
      "name": "C/C++ Runner: Debug Session",
      "type": "cppdbg",
      "request": "launch",
      "args": [],
      "stopAtEntry": false,
      "externalConsole": true,
      "cwd": "d:/STREAM/steamapps/common/RockGodTycoon",
      "program": "d:/STREAM/steamapps/common/RockGodTycoon/build/Debug/outDebug",
      "MIMode": "gdb",
      "miDebuggerPath": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ]
    }
  ]
}
